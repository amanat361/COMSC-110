Name: Samin Amanat
Course: COMSC-110-1021

1. Objective
Enter a line of text then encode the text to based on the encoding array.

2. Requirements
INPUT:
Input file to encode with text in the file

PROCESSING: the objective broken down into major parts, use it as checklist
Get file name from user
Open input file
Open output file
For each character in the file, bump it up by the offset which is an array that holds different values
Loop the offset array so that each character is encoded differently
Output encoded text to output file
Output encoded text to the console
Close both files

OUTPUT:
Output prompt with user instructions:
--The user should make a file
--Put text on the file
--What the encoded file will be
Output encoded text to output file
Output encoded text to the console

DATA: data item name, type of data, units of measure, valid values, formatting
[string] objective - "Enter a line of text then encode the text to the next character in the ASCII code."
[string] text - text inputted by the user in their text file
[string] input file - the name of the file that is inputted by the user
[string] output file - the name of the file that is outputted by the user
[integer] loop index - a letter like 'c' to be used in a for loop
[ifstream] fin - a variable to hold the value of an inputted file (reading from a file)
[ofstream] fout - a variable to hold the value of an outputting file (writing to a file)
[integer] counter - how far in the text the loop has gone through, starts at 0
[integer] offsetIndex - the location in the offset array
[constant integer] SIZE - size of the array - initializes at 5
[integer array] offset - an array with the size of SIZE that holds the values of -5, 8, 12, 6, and 1

3. Instructions
10 Output user introduction and instructions
20 Ask user for name of input file
25 Input name of input file
30 Open file for input
35 Check if file is good
40 Open file for output
45 Check if file is good
50 If there is no text in the input file, skip to instruction 100
60 Get a line of text from input file
70 offsetIndex = remainder of counter / SIZE
80 c = 0
90 as long as c < length of text do the following, if c >= length of text then skip to instruction 130
100 For each character in the line of text, move that character ASCII code + offset index of c
110 counter = counter + 1
120 offsetIndex = remainder of counter / SIZE
130 c = c + 1
140 go back to instrcution 90
150 Output encoded text to output file
160 Output encoded text to the console
170 If EOF skip to instruction 60 else skip to instruction 180
180 Close files
200 END

4. Test Cases

Test Case #1: simplest test case

What is being tested: Encoding "Hello"
Input values if any: encode.txt with "Hello" written on its first line
Expected results: output to console and secret.txt: "Cmxrp"

What would happen:

Output user introduction
Output instructions:

Please make a text file that you would like to be encoded.
Put your text that you would like to be encoded inside of that file.
The encoded file will be created as "secret.txt" and also outputted to the console.
When you are done, push enter, the program will wait...

User pushes enter

Output prompt for filename:

What is the name of the file to be encoded? (should end with .txt):

User input's "encode.txt" which is a file that has "Hello" written on the first line

offsetIndex = counter % SIZE = 0 / 5 = 0
c = 0
text[c] = text[c] + offset[offsetIndex]
text[0] = text[0] + offset[0]
H = H + (-5)
text[c] = C
text[0] = C
total output = C
counter = counter + 1 = 0 + 1 = 1
offsetIndex = counter % SIZE = 1 / 5 = 1
c = 1
text[c] = text[c] + offset[offsetIndex]
text[1] = text[1] + offset[1]
e = e + 8
text[c] = m
text[1] = m
total output = Cm
counter = counter + 1 = 1 + 1 = 2
offsetIndex = counter % SIZE = 2 / 5 = 2
c = 2
text[c] = text[c] + offset[offsetIndex]
text[2] = text[2] + offset[2]
l = l + 12
text[c] = x
text[2] = x
total output = Cmx
counter = counter + 1 = 2 + 1 = 3
offsetIndex = counter % SIZE = 3 / 5 = 3
c = 3
text[c] = text[c] + offset[offsetIndex]
text[3] = text[3] + offset[3]
l = l + 6
text[c] = r
text[3] = r
total output = Cmxr
counter = counter + 1 = 3 + 1 = 4
offsetIndex = counter % SIZE = 4 / 5 = 4
c = 4
text[c] = text[c] + offset[offsetIndex]
text[4] = text[4] + offset[4]
o = o + 1
text[c] = p
text[4] = p
total output = Cmxrp
no more characters in line of text, go to next line
no more lines in file, end loop
Output "Cmxrp" to console and file
Close input and output files
Done