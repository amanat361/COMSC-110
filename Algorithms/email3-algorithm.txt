Name: Samin Amanat
Course: COMSC-110-1021

1. Objective
A utility for copying emails from one file to another

2. Requirements
REQUIREMENTS:
If you open the output file, you are not doing this right.
If your e-loop is NOT after your s-loop, you are not doing this right.
If your s- and e-loops are not contained in the code block of an if-statement that tests for the character @, you are not doing this right.
If you do not using the substring function, you are not doing this right.
If you do not create your own input files with which to test your program, you are not doing this right.
If you are not using variables i, s, e, dotPos, hasDot, anEmail, nEmails
If you do not output to the screen each valid email address with a "; " at the end except for the last valid email address found
If you do not test your program with the ten .txt files provided in the project writeup, and see duplicate email addresses outputed, you are not doing this right.

INPUT:
iFileName - the user should input the name of the input file, or push enter for default
oFileName - the user should input the name of the output file, or push enter for default
enterToContinue - the user should push enter to continue after verifying that the files are correct

PROCESSING: the objective broken down into major parts, use it as checklist
user introduction
prompt user for input filename
check if filename is valid or enter key
prompt user for output filename
check if filename is valid or enter key
output filenames confirmation (even though the user can't input them again) and user pushes enter to continue
process every line in the input file, output every email in the input file to console
output number of valid emails in file

OUTPUT:
output user introduction
output a prompts to the console for filenames
output variable error messages if filenames are invalid
output filename confirmations
output a prompt to press ENTER key to continue
output lines in the file for every @ in the lines

DATA: data item name, type of data, units of measure, valid values, formatting
-----
MAIN
-----
[text] objective = "A utility for copying emails from one file to another" (program objective)
[text] dFileName = "fileContainingEmails.txt" (the default file name)
[text] iFileName (the input filename inputted by the user if not default)
[text] oFileName (the output filename inputted by the user if not default)
[text] confirmation (for the user to push enter to continue after confirming the filenames)
----------------------------
text returning - GETFILENAME
----------------------------
[integer] c (loop index)
[true / false] inputValid = true ()whether the input is valid or not)
[text] fileName (file name passed to main)
[text] defaultFile = dFileName (the default file name passed from main)
[text] inOrOut = inputOrOutput (whether this is for the input or output file)
-----------------------------
no values returned - READFILE
-----------------------------
[text] iFileName --- passed from main
[integer] nEmails = 0 (number of valid emails in the whole file)
[text] lineFromFile (a line to be read from the input file)
[input file] fin (input file variable)
-------------------------------
integer returning - PROCESSLINE
-------------------------------
[text] line --- passed from readLine
[integer] c (loop index)
[integer] s (loop index)
[integer] e (loop index)
[integer] nEmails = 0 (number of valid emails in the line)
[integer] dotPos (position of dot in email)
[text] anEmail (valid email address)
[true / false] hasDot (if there is a period in the line)
------------------------------------
true / false - ISVALIDEMAILCHARACTER
------------------------------------
[integer] c --- passed from processLine

3. Instructions
-----
MAIN
-----
10 Output user introduction
20 Get input filename by passing dFileName and "input" to getFileName function = iFileName
30 If filename is 0 characters, enter must have been pushed, so default filename is used
30a iFileName = dFileName
30b dFileName = "copyPasteMyEmails.txt"
40 Else, dFileName = iFileName (iFileName is not touched and dFileName is changed)
50 Get output filename by passing dFileName and "output" to getFileName function = oFileName
60 If filename is 0 characters, enter must have been pushed, so default filename is used
60a oFileName = dFileName
70 Output confirmation message - "File name confirmation:"
80 Output "Input file: "
90 Output iFileName
100 Output "Output file: "
110 Output oFileName
120 Output prompt to continue (user can't change file names after this) - "Press enter to continue with the program..."
130 Input confirmation (no matter what they press, the program will just continue as long as they push enter)
140 Run readLine with iFileName
150 DONE
-----
READLINE (iFileName passed from main as parameter)
-----
10 Open file for input
20 Check if file is good
30 If no lines in file skip to instruction 90
40 Get the text from the input file
50 Run processLine with lineFromFile passed through
60 Get nEmails from processLine and add it to nEmails in readLine
70 Go back to instruction 30
80 Close input file
90 Output number of valid emails in file
"Number of valid email addresses: " nEmails
-----
GETFILENAME
-----
10 inputValid = true
20 output "Enter "
30 output inOrOut
40 output " filename [enter for default: "
50 output dFileName
60 output "]: "
70 input fileName
80 if fileName length is zero inputValid is true (they pushed enter for default)
90 if fileName length is between 0 and 5 inputValid is false
90a output "This filename is invalid because it is too short. Perhaps you forgot the file extention."
100 if filename starts with a space inputValid is not true
100a output "This filename is invalid because it starts with a space."
110 if filename starts with a period inputValid is not true
110a output "This filename is invalid because it starts with a period."
120 if last four characters in filename are not ".txt" then inputValid is not true
120a output "This filename is invalid because it does not end with ".txt""
130 if fileName contains any special characters " * : < > ? / or | then inputValid is not true
130a output "This filename is invalid because it contains a special character " * : < > ? / or |"
140 if inputValid = false go back to instruction 10
150 return fileName to main
-----
PROCESSLINE (line passed from readLine
-----
10 for:
10a value: c = 0
10b condition: c < length of line
---if not, function is finished---
10c increment: c = c + 1
20 if line at index c does not = '@' (line contains '@') then skip to instruction {_))@_$_@((_}
30 s = c - 1
40 e = c + 1
50 hasDot = false
60 find beginning of string with s
65 break loop when invalid email character is met
/---\
for:
value: s
condition: s >= 0
increment: s = s - 1
run line at index of s through isValidEmailCharacter
if not valid, break loop
\---/
70 s = s + 1
80 find end of string with e
85 get valid characters from email to output
/---\
for:
value: e
condition: e < 0
increment: e = e + 1
run line at index of e through isValidEmailCharacter
if not valid, break loop
if line at index e = '.' then hasDot = true and dotPos = e
\---/
90 if hasDot = true AND dotPos > (c+1) AND s < c AND e > c
90a output subtring of line with values of s and e-s
90b nEmails = nEmails + 1
100 Go back to instruction 10
DONE
-----
isValidEmailCharacter
-----
10 c passed from main as character
20 if c does not meet at least onf of the following conditions:
between A and Z
between a and z
between 0 and 9
is a '.' or a '-' or a '+'
then return true to processLine
if not, return false, as the email character is not valid

4. Test Cases

Test Case #1: the simplest test case

What is being tested: both defaults

Enter input filename [enter for default: fileContainingEmails.txt]:
Enter output filename [enter for default: copyPasteMyEmails.txt]:

File name confirmation:
Input file: fileContainingEmails.txt
Output file: copyPasteMyEmails.txt

Press enter to continue with the program...

Program terminates because fileContainingEmails.txt does not exist

What is happening:

-----
MAIN
-----
10 Output user introduction
20 Get input filename by passing dFileName and "input" to getFileName function = iFileName
-----
GETFILENAME
-----
10 inputValid = true
20 output "Enter "
30 output inOrOut
40 output " filename [enter for default: "
50 output dFileName
60 output "]: "
"Enter input filename [enter for default: "fileContainingEmails.txt"]: "
70 input fileName
User pushes enter
80 if fileName length is zero inputValid is true (they pushed enter for default)
user pushed enter so inputValid is true. since a condition has been met, the other statements don't run
150 return fileName to main
-----
MAIN
-----
iFileName = "" (enter key with no text)
30 If filename is 0 characters, enter must have been pushed, so default filename is used
yes, enter key was pressed
30a iFileName = dFileName
iFileName = "fileContainingEmails.txt"
30b dFileName = "copyPasteMyEmails.txt"
dFileName = "copyPasteMyEmails.txt"
40 Else, dFileName = iFileName (iFileName is not touched and dFileName is changed)
the if condition was met so this does not run
50 Get output filename by passing dFileName and "output" to getFileName function = oFileName
-----
GETFILENAME
-----
10 inputValid = true
20 output "Enter "
30 output inOrOut
40 output " filename [enter for default: "
50 output dFileName
60 output "]: "
"Enter output filename [enter for default: "copyPasteMyEmails.txt"]: "
70 input fileName
User pushes enter
80 if fileName length is zero inputValid is true (they pushed enter for default)
user pushed enter so inputValid is true. since a condition has been met, the other statements don't run
150 return fileName to main
-----
MAIN
-----
60 If filename is 0 characters, enter must have been pushed, so default filename is used
yes, enter key was pressed
60a oFileName = dFileName
oFileName = "copyPasteMyEmails.txt"
70 Output confirmation message - "File name confirmation:"
80 Output "Input file: "
90 Output iFileName
"Input file: fileContainingEmails.txt"
100 Output "Output file: "
110 Output oFileName
"Output file: copyPasteMyEmails.txt"
120 Output prompt to continue (user can't change file names after this) - "Press enter to continue with the program..."
"Press enter to continue..."
130 Input confirmation (no matter what they press, the program will just continue as long as they push enter)
user presses enter
-----
READFILE
-----
10 Open file for input
20 Check if file is good
file is not good so program does not continue

----------
----------

Test Case #2: a default scenario

What is being tested: 0.txt from the rdb3.com test cases

Enter input filename [enter for default: fileContainingEmails.txt]: 0.txt
Enter output filename [enter for default: 0.txt]: (user pushes enter and leaves this space blank)

File name confirmation:
Input file: 0.txt
Output file: 0.txt

Press enter to continue with the program... (user pushes enter and leaves this space blank)

(blank line)

Number of valid email addresses: 0

Test case #3: a default scenario

What is being tested: 1.txt from the rdb3.com test cases

Enter input filename [enter for default: fileContainingEmails.txt]: 1.txt
Enter output filename [enter for default: 1.txt]: (user pushes enter and leaves this space blank)

File name confirmation:
Input file: 1.txt
Output file: 1.txt

Press enter to continue with the program... (user pushes enter and leaves this space blank)

DBach@dvc.edu; JBrecha@dvc.edu; RBurns@dvc.edu; SCMiller@dvc.edu; MCollazo@dvc.edu; CDuke@dvc.edu; DEckel@dvc.edu; KEdwards@dvc.edu; PFarmer@dvc.edu; LFratessa@dvc.edu; EFreiden@dvc.edu; CHaynes@dvc.edu; DJohnson@dvc.edu; KKeating@dvc.edu; GKhaja@dvc.edu; LKnight@dvc.edu; HKow@dvc.edu; HaKresch@dvc.edu; PLeitner@dvc.edu; TLevy@dvc.edu; LLin@dvc.edu; CLokke@dvc.edu; PLou@dvc.edu; JMagee@dvc.edu; SMoore@dvc.edu; JMoran@dvc.edu; TMowry@dvc.edu; SNeedham@dvc.edu; TNirgiotis@dvc.edu; BOsborne@dvc.edu; WParks@dvc.edu; DPrapave@dvc.edu; MReynold@dvc.edu; SSarkis@dvc.edu; JeSmith@dvc.edu; KStallin@dvc.edu; AWestcott@dvc.edu; RWestlake@dvc.edu; CWilcox@dvc.edu; PWillett@dvc.edu;

Number of valid email addresses: 40

Test case #4:

What is being tested: 2.txt from the rdb3.com test cases

Enter input filename [enter for default: fileContainingEmails.txt]: 2.txt

Enter output filename [enter for default: 2.txt]:

File name confirmation:
Input file: 2.txt
Output file: 2.txt

Press enter to continue with the program...

DBach@dvc.edu; DBach@dvc.edu; JBrecha@dvc.edu; JBrecha@dvc.edu; RBurns@dvc.edu; RBurns@dvc.edu; SCMiller@dvc.edu; SCMiller@dvc.edu; MCollazo@dvc.edu; MCollazo@dvc.edu; CDuke@dvc.edu; CDuke@dvc.edu; DEckel@dvc.edu; DEckel@dvc.edu; KEdwards@dvc.edu; KEdwards@dvc.edu; PFarmer@dvc.edu; PFarmer@dvc.edu; LFratessa@dvc.edu; LFratessa@dvc.edu; EFreiden@dvc.edu; EFreiden@dvc.edu; CHaynes@dvc.edu; CHaynes@dvc.edu; DJohnson@dvc.edu; DJohnson@dvc.edu; KKeating@dvc.edu; KKeating@dvc.edu; GKhaja@dvc.edu; GKhaja@dvc.edu; LKnight@dvc.edu; LKnight@dvc.edu; HKow@dvc.edu; HKow@dvc.edu; HaKresch@dvc.edu; HaKresch@dvc.edu; PLeitner@dvc.edu; PLeitner@dvc.edu; TLevy@dvc.edu; TLevy@dvc.edu; LLin@dvc.edu; LLin@dvc.edu; CLokke@dvc.edu; CLokke@dvc.edu; PLou@dvc.edu; PLou@dvc.edu; JMagee@dvc.edu; JMagee@dvc.edu; SMoore@dvc.edu; SMoore@dvc.edu; JMoran@dvc.edu; JMoran@dvc.edu; TMowry@dvc.edu; TMowry@dvc.edu; SNeedham@dvc.edu; SNeedham@dvc.edu; TNirgiotis@dvc.edu; TNirgiotis@dvc.edu; BOsborne@dvc.edu; BOsborne@dvc.edu; WParks@dvc.edu; WParks@dvc.edu; DPrapave@dvc.edu; DPrapave@dvc.edu; MReynold@dvc.edu; MReynold@dvc.edu; SSarkis@dvc.edu; SSarkis@dvc.edu; JeSmith@dvc.edu; JeSmith@dvc.edu; KStallin@dvc.edu; KStallin@dvc.edu; AWestcott@dvc.edu; AWestcott@dvc.edu; RWestlake@dvc.edu; RWestlake@dvc.edu; CWilcox@dvc.edu; CWilcox@dvc.edu; PWillett@dvc.edu; PWillett@dvc.edu;

Number of valid email addresses: 80
----------
----------

Test case #5:

What is being tested: all of the invalid input cases

What will happen:

Enter input filename [enter for default: fileContainingEmails.txt]: file
This filename is invalid because it is too short. Perhaps you forgot the file extention.

Enter input filename [enter for default: fileContainingEmails.txt]:  .txt
This filename is invalid because it starts with a space.

Enter input filename [enter for default: fileContainingEmails.txt]: ..txt
This filename is invalid because it starts with a period.

Enter input filename [enter for default: fileContainingEmails.txt]: file.xtx
This filename is invalid because it does not end with ".txt"

Enter input filename [enter for default: fileContainingEmails.txt]: *.txt
This filename is invalid because it contains a special character " * : < > ? / or |

Enter input filename [enter for default: fileContainingEmails.txt]: file.txt

Enter output filename [enter for default: file.txt]: (enter)

File name confirmation:
Input file: file.txt
Output file: file.txt

----------
***NOTE***
----------
ALL of the test cases from rdb3.com work, from 0.txt to 10.txt and also math1.txt